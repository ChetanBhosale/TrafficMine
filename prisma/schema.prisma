generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(dbgenerated("substring(replace(cast(gen_random_uuid() as text), '-', ''), 1, 8)")) @db.Char(8)
  name          String?
  email         String    @unique
  image         String?
  projects      Project[]

  @@map("users")
}

model Project {
  id          String   @id @default(dbgenerated("substring(replace(cast(gen_random_uuid() as text), '-', ''), 1, 8)")) @db.Char(8)
  name        String
  description String?
  userId      String   @db.Char(8)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
  image       String?

  visitorSession VisitorSession[]
  @@map("projects")
}

model VisitorSession {
  id            String     @id @default(dbgenerated("substring(replace(cast(gen_random_uuid() as text), '-', ''), 1, 8)")) @db.Char(8)
  projectId     String     @db.Char(8)
  project       Project    @relation(fields: [projectId], references: [id])
  visitorId     String     
  sessionStart  DateTime   @default(now())
  sessionEnd    DateTime?
  isActive      Boolean    @default(false)
  isFinal       Boolean
  source        String
  referrer      String?    // New field
  duration      Int        
  page          String     
  visitedPages  String[]   
  ip            String?    
  deviceInfo    Json?      
  browserInfo   Json?      
  errors        Json?      
  userMetadata  Json?      
  country       String?    // New field
  region        String?    // New field
  city          String?    // New field
  timezone      String?    // New field
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([visitorId])
  @@index([projectId])
  @@index([sessionStart])
  @@map("visitor_sessions")
}